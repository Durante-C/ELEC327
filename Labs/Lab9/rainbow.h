/*

import matplotlib.pyplot as plt
import numpy as np

matrix = np.expand_dims(np.linspace(0,1,num=64), 1)
RGBA = plt.cm.gist_rainbow(matrix).squeeze()
RGB = np.round(RGBA[:,:3] * 255).astype(int)

with open("rainbow.h","w") as f:
    print('''#ifndef RAINBOW_H
#define RAINBOW_H


#include <stdint.h>

uint8_t rainbow[] = {
''',file=f)
    for row in RGB:
        print("    0x{:02X}, 0x{:02X}, 0x{:02X},".format(*row), file=f)

    print('};', file=f)

    print('''
uint8_t rainbow_bgr[] = {
''',file=f)
    BGR = RGB[:,[2,1,0]]
    for row in BGR:
        rowlist = [i for i in (np.round(row*255)).astype(int)]
        print("    0x{:02X}, 0x{:02X}, 0x{:02X},".format(*row), file=f)

    print('};', file=f)

    print('''
uint8_t rainbow_gbr[] = {
''',file=f)
    GBR = RGB[:,[1,2,0]]
    for row in GBR:
        print("    0x{:02X}, 0x{:02X}, 0x{:02X},".format(*row), file=f)

    print('};', file=f)

    print('''
uint8_t rainbow_rbg[] = {
''',file=f)
    RBG = RGB[:,[0,2,1]]
    for row in RBG:
        print("    0x{:02X}, 0x{:02X}, 0x{:02X},".format(*row), file=f)

    print('};', file=f)


    print("#endif // RAINBOW_H_", file=f)


 */

#ifndef RAINBOW_H
#define RAINBOW_H


#include <stdint.h>

uint8_t rainbow[] = {

    0xFF, 0x00, 0x29,
    0xFF, 0x00, 0x13,
    0xFF, 0x02, 0x00,
    0xFF, 0x18, 0x00,
    0xFF, 0x2D, 0x00,
    0xFF, 0x43, 0x00,
    0xFF, 0x58, 0x00,
    0xFF, 0x6E, 0x00,
    0xFF, 0x84, 0x00,
    0xFF, 0x99, 0x00,
    0xFF, 0xAF, 0x00,
    0xFF, 0xC4, 0x00,
    0xFF, 0xDA, 0x00,
    0xFF, 0xF0, 0x00,
    0xF9, 0xFF, 0x00,
    0xE3, 0xFF, 0x00,
    0xC8, 0xFF, 0x00,
    0xB2, 0xFF, 0x00,
    0x9D, 0xFF, 0x00,
    0x87, 0xFF, 0x00,
    0x72, 0xFF, 0x00,
    0x5C, 0xFF, 0x00,
    0x46, 0xFF, 0x00,
    0x31, 0xFF, 0x00,
    0x1B, 0xFF, 0x00,
    0x05, 0xFF, 0x00,
    0x00, 0xFF, 0x10,
    0x00, 0xFF, 0x26,
    0x00, 0xFF, 0x3B,
    0x00, 0xFF, 0x51,
    0x00, 0xFF, 0x66,
    0x00, 0xFF, 0x7C,
    0x00, 0xFF, 0x97,
    0x00, 0xFF, 0xAC,
    0x00, 0xFF, 0xC2,
    0x00, 0xFF, 0xD7,
    0x00, 0xFF, 0xED,
    0x00, 0xFC, 0xFF,
    0x00, 0xE6, 0xFF,
    0x00, 0xD0, 0xFF,
    0x00, 0xBB, 0xFF,
    0x00, 0xA5, 0xFF,
    0x00, 0x8F, 0xFF,
    0x00, 0x79, 0xFF,
    0x00, 0x64, 0xFF,
    0x00, 0x4E, 0xFF,
    0x00, 0x38, 0xFF,
    0x00, 0x23, 0xFF,
    0x00, 0x07, 0xFF,
    0x0E, 0x00, 0xFF,
    0x24, 0x00, 0xFF,
    0x3A, 0x00, 0xFF,
    0x50, 0x00, 0xFF,
    0x65, 0x00, 0xFF,
    0x7B, 0x00, 0xFF,
    0x91, 0x00, 0xFF,
    0xA7, 0x00, 0xFF,
    0xBC, 0x00, 0xFF,
    0xD2, 0x00, 0xFF,
    0xE8, 0x00, 0xFF,
    0xFE, 0x00, 0xFF,
    0xFF, 0x00, 0xEB,
    0xFF, 0x00, 0xD5,
    0xFF, 0x00, 0xBF,
};

uint8_t rainbow_bgr[] = {

    0x29, 0x00, 0xFF,
    0x13, 0x00, 0xFF,
    0x00, 0x02, 0xFF,
    0x00, 0x18, 0xFF,
    0x00, 0x2D, 0xFF,
    0x00, 0x43, 0xFF,
    0x00, 0x58, 0xFF,
    0x00, 0x6E, 0xFF,
    0x00, 0x84, 0xFF,
    0x00, 0x99, 0xFF,
    0x00, 0xAF, 0xFF,
    0x00, 0xC4, 0xFF,
    0x00, 0xDA, 0xFF,
    0x00, 0xF0, 0xFF,
    0x00, 0xFF, 0xF9,
    0x00, 0xFF, 0xE3,
    0x00, 0xFF, 0xC8,
    0x00, 0xFF, 0xB2,
    0x00, 0xFF, 0x9D,
    0x00, 0xFF, 0x87,
    0x00, 0xFF, 0x72,
    0x00, 0xFF, 0x5C,
    0x00, 0xFF, 0x46,
    0x00, 0xFF, 0x31,
    0x00, 0xFF, 0x1B,
    0x00, 0xFF, 0x05,
    0x10, 0xFF, 0x00,
    0x26, 0xFF, 0x00,
    0x3B, 0xFF, 0x00,
    0x51, 0xFF, 0x00,
    0x66, 0xFF, 0x00,
    0x7C, 0xFF, 0x00,
    0x97, 0xFF, 0x00,
    0xAC, 0xFF, 0x00,
    0xC2, 0xFF, 0x00,
    0xD7, 0xFF, 0x00,
    0xED, 0xFF, 0x00,
    0xFF, 0xFC, 0x00,
    0xFF, 0xE6, 0x00,
    0xFF, 0xD0, 0x00,
    0xFF, 0xBB, 0x00,
    0xFF, 0xA5, 0x00,
    0xFF, 0x8F, 0x00,
    0xFF, 0x79, 0x00,
    0xFF, 0x64, 0x00,
    0xFF, 0x4E, 0x00,
    0xFF, 0x38, 0x00,
    0xFF, 0x23, 0x00,
    0xFF, 0x07, 0x00,
    0xFF, 0x00, 0x0E,
    0xFF, 0x00, 0x24,
    0xFF, 0x00, 0x3A,
    0xFF, 0x00, 0x50,
    0xFF, 0x00, 0x65,
    0xFF, 0x00, 0x7B,
    0xFF, 0x00, 0x91,
    0xFF, 0x00, 0xA7,
    0xFF, 0x00, 0xBC,
    0xFF, 0x00, 0xD2,
    0xFF, 0x00, 0xE8,
    0xFF, 0x00, 0xFE,
    0xEB, 0x00, 0xFF,
    0xD5, 0x00, 0xFF,
    0xBF, 0x00, 0xFF,
};

uint8_t rainbow_gbr[] = {

    0x00, 0x29, 0xFF,
    0x00, 0x13, 0xFF,
    0x02, 0x00, 0xFF,
    0x18, 0x00, 0xFF,
    0x2D, 0x00, 0xFF,
    0x43, 0x00, 0xFF,
    0x58, 0x00, 0xFF,
    0x6E, 0x00, 0xFF,
    0x84, 0x00, 0xFF,
    0x99, 0x00, 0xFF,
    0xAF, 0x00, 0xFF,
    0xC4, 0x00, 0xFF,
    0xDA, 0x00, 0xFF,
    0xF0, 0x00, 0xFF,
    0xFF, 0x00, 0xF9,
    0xFF, 0x00, 0xE3,
    0xFF, 0x00, 0xC8,
    0xFF, 0x00, 0xB2,
    0xFF, 0x00, 0x9D,
    0xFF, 0x00, 0x87,
    0xFF, 0x00, 0x72,
    0xFF, 0x00, 0x5C,
    0xFF, 0x00, 0x46,
    0xFF, 0x00, 0x31,
    0xFF, 0x00, 0x1B,
    0xFF, 0x00, 0x05,
    0xFF, 0x10, 0x00,
    0xFF, 0x26, 0x00,
    0xFF, 0x3B, 0x00,
    0xFF, 0x51, 0x00,
    0xFF, 0x66, 0x00,
    0xFF, 0x7C, 0x00,
    0xFF, 0x97, 0x00,
    0xFF, 0xAC, 0x00,
    0xFF, 0xC2, 0x00,
    0xFF, 0xD7, 0x00,
    0xFF, 0xED, 0x00,
    0xFC, 0xFF, 0x00,
    0xE6, 0xFF, 0x00,
    0xD0, 0xFF, 0x00,
    0xBB, 0xFF, 0x00,
    0xA5, 0xFF, 0x00,
    0x8F, 0xFF, 0x00,
    0x79, 0xFF, 0x00,
    0x64, 0xFF, 0x00,
    0x4E, 0xFF, 0x00,
    0x38, 0xFF, 0x00,
    0x23, 0xFF, 0x00,
    0x07, 0xFF, 0x00,
    0x00, 0xFF, 0x0E,
    0x00, 0xFF, 0x24,
    0x00, 0xFF, 0x3A,
    0x00, 0xFF, 0x50,
    0x00, 0xFF, 0x65,
    0x00, 0xFF, 0x7B,
    0x00, 0xFF, 0x91,
    0x00, 0xFF, 0xA7,
    0x00, 0xFF, 0xBC,
    0x00, 0xFF, 0xD2,
    0x00, 0xFF, 0xE8,
    0x00, 0xFF, 0xFE,
    0x00, 0xEB, 0xFF,
    0x00, 0xD5, 0xFF,
    0x00, 0xBF, 0xFF,
};

uint8_t rainbow_rbg[] = {

    0xFF, 0x29, 0x00,
    0xFF, 0x13, 0x00,
    0xFF, 0x00, 0x02,
    0xFF, 0x00, 0x18,
    0xFF, 0x00, 0x2D,
    0xFF, 0x00, 0x43,
    0xFF, 0x00, 0x58,
    0xFF, 0x00, 0x6E,
    0xFF, 0x00, 0x84,
    0xFF, 0x00, 0x99,
    0xFF, 0x00, 0xAF,
    0xFF, 0x00, 0xC4,
    0xFF, 0x00, 0xDA,
    0xFF, 0x00, 0xF0,
    0xF9, 0x00, 0xFF,
    0xE3, 0x00, 0xFF,
    0xC8, 0x00, 0xFF,
    0xB2, 0x00, 0xFF,
    0x9D, 0x00, 0xFF,
    0x87, 0x00, 0xFF,
    0x72, 0x00, 0xFF,
    0x5C, 0x00, 0xFF,
    0x46, 0x00, 0xFF,
    0x31, 0x00, 0xFF,
    0x1B, 0x00, 0xFF,
    0x05, 0x00, 0xFF,
    0x00, 0x10, 0xFF,
    0x00, 0x26, 0xFF,
    0x00, 0x3B, 0xFF,
    0x00, 0x51, 0xFF,
    0x00, 0x66, 0xFF,
    0x00, 0x7C, 0xFF,
    0x00, 0x97, 0xFF,
    0x00, 0xAC, 0xFF,
    0x00, 0xC2, 0xFF,
    0x00, 0xD7, 0xFF,
    0x00, 0xED, 0xFF,
    0x00, 0xFF, 0xFC,
    0x00, 0xFF, 0xE6,
    0x00, 0xFF, 0xD0,
    0x00, 0xFF, 0xBB,
    0x00, 0xFF, 0xA5,
    0x00, 0xFF, 0x8F,
    0x00, 0xFF, 0x79,
    0x00, 0xFF, 0x64,
    0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x38,
    0x00, 0xFF, 0x23,
    0x00, 0xFF, 0x07,
    0x0E, 0xFF, 0x00,
    0x24, 0xFF, 0x00,
    0x3A, 0xFF, 0x00,
    0x50, 0xFF, 0x00,
    0x65, 0xFF, 0x00,
    0x7B, 0xFF, 0x00,
    0x91, 0xFF, 0x00,
    0xA7, 0xFF, 0x00,
    0xBC, 0xFF, 0x00,
    0xD2, 0xFF, 0x00,
    0xE8, 0xFF, 0x00,
    0xFE, 0xFF, 0x00,
    0xFF, 0xEB, 0x00,
    0xFF, 0xD5, 0x00,
    0xFF, 0xBF, 0x00,
};
#endif /* RAINBOW_H_ */
